# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

input ChangePasswordInput {
  newPassword: String!
}

input ClaimChangingOwnEmailInput {
  newEmail: String!
}

input ClaimChangingPasswordInput {
  email: String!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Mutation {
  changePassword(input: ChangePasswordInput!): Boolean!
  claimChangingOwnEmail(input: ClaimChangingOwnEmailInput!): Boolean!
  claimChangingPassword(input: ClaimChangingPasswordInput!): Boolean!
  reissueTokens: SignInUserResponse!
  signIn(input: SignInUserInput!): SignInUserResponse!
  signOut: Boolean!
  signUp(input: SignUpUserInput!): Boolean!
  verifySession: VerifySessionResponse!
  verifyTokenAtChangeEmail: Boolean!
  verifyTokenAtChangePassword: Boolean!
  verifyTokenAtSignUp: Boolean!
}

type Query {
  user(where: UserWhereUniqueInput!): User!
}

type RefreshTokenCountAggregate {
  _all: Int!
  id: Int!
}

type RefreshTokenMaxAggregate {
  id: String
}

type RefreshTokenMinAggregate {
  id: String
}

input SignInUserInput {
  email: String!
  password: String!
}

type SignInUserResponse {
  accessToken: String!
  accessTokenExpiresIn: String!
  refreshToken: String!
  refreshTokenExpiresIn: String!
  user: User!
}

input SignUpUserInput {
  email: String!
  password: String!
  role: String
}

type User {
  _count: UserCount!
  changeEmailCompletedAt: DateTime
  changeEmailSentAt: DateTime
  changePasswordCompletedAt: DateTime
  changePasswordSentAt: DateTime

  """@Validator.@IsEmail()"""
  email: String!
  id: ID!
  role: UserRole!
  signUpConfirmationSentAt: DateTime
  signUpConfirmedAt: DateTime
  status: UserStatus!
}

type UserCount {
  RefreshToken: Int!
}

type UserCountAggregate {
  _all: Int!
  changeEmailCompletedAt: Int!
  changeEmailSentAt: Int!
  changePasswordCompletedAt: Int!
  changePasswordSentAt: Int!
  email: Int!
  id: Int!
  role: Int!
  signUpConfirmationSentAt: Int!
  signUpConfirmedAt: Int!
  status: Int!
}

type UserMaxAggregate {
  changeEmailCompletedAt: DateTime
  changeEmailSentAt: DateTime
  changePasswordCompletedAt: DateTime
  changePasswordSentAt: DateTime
  email: String
  id: String
  role: UserRole
  signUpConfirmationSentAt: DateTime
  signUpConfirmedAt: DateTime
  status: UserStatus
}

type UserMinAggregate {
  changeEmailCompletedAt: DateTime
  changeEmailSentAt: DateTime
  changePasswordCompletedAt: DateTime
  changePasswordSentAt: DateTime
  email: String
  id: String
  role: UserRole
  signUpConfirmationSentAt: DateTime
  signUpConfirmedAt: DateTime
  status: UserStatus
}

enum UserRole {
  ADMIN
  GENERAL
}

enum UserStatus {
  BANNED
  CANCELED
  CONFIRMED
  NOT_CONFIRMED
}

input UserWhereUniqueInput {
  email: String
  id: String
}

type VerifySessionResponse {
  accessTokenExpiresIn: String!
  user: User!
}